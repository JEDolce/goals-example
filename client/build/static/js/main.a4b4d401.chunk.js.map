{"version":3,"sources":["Features/Auth/authService.js","Features/Auth/authSlice.js","components/Header.jsx","Features/Goals/goalService.js","Features/Goals/goalSlice.js","components/GoalForm.jsx","components/Spinner.jsx","components/GoalItem.jsx","pages/Dashboard.jsx","pages/Register.jsx","pages/Login.jsx","App.js","app/store.js","index.js"],"names":["API_URL","register","userData","a","axios","post","response","data","localStorage","setItem","JSON","stringify","login","logout","removeItem","authService","user","parse","getItem","initialState","isError","isSuccess","isLoading","message","createAsyncThunk","thunkAPI","toString","rejectWithValue","authSlice","createSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","Header","navigate","useNavigate","dispatch","useDispatch","useSelector","auth","className","to","onClick","getGoals","token","config","headers","Authorization","get","createGoal","goalData","deleteGoal","goalId","delete","goalService","goals","_","getState","console","log","id","goalSlice","push","filter","goal","_id","GoalForm","useState","text","setText","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","Spinner","GoalItem","Date","createdAt","toLocaleString","Dashboard","useEffect","length","map","Register","email","password","password2","formData","setFormData","toast","error","prevState","placeholder","Login","App","path","element","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4b4d401.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/users/';\r\n\r\n// Register user\r\nconst register = async (userData) => {\r\n    const response = await axios.post(API_URL, userData);\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n    };\r\n\r\n    return response.data;\r\n};\r\n\r\n// Login user\r\nconst login = async (userData) => {\r\n    const response = await axios.post(API_URL + 'login', userData);\r\n\r\n    if (response.data) {\r\n        localStorage.setItem('user', JSON.stringify(response.data))\r\n    };\r\n\r\n    return response.data;\r\n};\r\n\r\n// Logout\r\nconst logout = async () => {\r\n    localStorage.removeItem('user')\r\n};\r\n\r\nconst authService = {\r\n    register,\r\n    logout,\r\n    login\r\n};\r\n\r\nexport default authService;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport authService from './authService';\r\n\r\n// Get user from localStorage\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialState = {\r\n    user: user ? user : null,\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: ''\r\n};\r\n\r\n// Register user\r\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\r\n    try {\r\n        return await authService.register(user)\r\n    } catch (error) {\r\n        const message =\r\n            (error.message &&\r\n                error.response.data &&\r\n                error.response.data.message)\r\n            || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n});\r\n\r\n// Login user\r\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\r\n    try {\r\n        return await authService.login(user)\r\n    } catch (error) {\r\n        const message =\r\n            (error.message &&\r\n                error.response.data &&\r\n                error.response.data.message)\r\n            || error.message || error.toString()\r\n        return thunkAPI.rejectWithValue(message)\r\n    }\r\n});\r\n\r\n// Logout\r\nexport const logout = createAsyncThunk('auth/logout',\r\n    async () => {\r\n        await authService.logout()\r\n    });\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) => {\r\n            state.isError = false\r\n            state.isSuccess = false\r\n            state.isLoading = false\r\n            state.message = ''\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(register.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(register.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.user = action.payload\r\n            })\r\n            .addCase(register.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n                state.user = null\r\n            })\r\n            .addCase(login.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(login.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.user = action.payload\r\n            })\r\n            .addCase(login.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n                state.user = null\r\n            })\r\n            .addCase(logout.fulfilled, (state) => {\r\n                state.user = null\r\n            })\r\n    }\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;","import React from 'react';\r\nimport {\r\n    FaSignInAlt,\r\n    FaSignOutAlt,\r\n    FaUser\r\n} from 'react-icons/fa';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout, reset } from '../Features/Auth/authSlice';\r\n\r\nexport default function Header() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { user } = useSelector((state) => state.auth);\r\n\r\n    const onLogout = () => {\r\n        dispatch(logout())\r\n        dispatch(reset())\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"logo\">\r\n                <Link to='/'>GoalSetter</Link>\r\n            </div>\r\n            <ul>\r\n                {user ? (\r\n                    <li>\r\n                        <button className='btn' onClick={onLogout}>\r\n                            <FaSignOutAlt /> Logout\r\n                        </button>\r\n                    </li>) : (\r\n                    <>\r\n                        <li>\r\n                            <Link to='/login'>\r\n                                <FaSignInAlt /> Login\r\n                            </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to='/register'>\r\n                                <FaUser /> Register\r\n                            </Link>\r\n                        </li>\r\n                    </>)}\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nconst API_URL = '/api/goals/';\r\n\r\n// Get user goals\r\nconst getGoals = async (token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    };\r\n\r\n    const response = await axios.get(API_URL, config);\r\n\r\n    return response.data;\r\n};\r\n\r\n// Create goal\r\nconst createGoal = async (goalData, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    };\r\n\r\n    const response = await axios.post(API_URL, goalData, config);\r\n\r\n    return response.data;\r\n};\r\n\r\n// Delete goal\r\nconst deleteGoal = async (goalId, token) => {\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    };\r\n\r\n    const response = await axios.delete(API_URL + goalId, config);\r\n\r\n    return response.data;\r\n};\r\n\r\nconst goalService = {\r\n    getGoals,\r\n    createGoal,\r\n    deleteGoal\r\n};\r\n\r\nexport default goalService;\r\n\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport goalService from './goalService';\r\n\r\nconst initialState = {\r\n    goals: [],\r\n    isError: false,\r\n    isSuccess: false,\r\n    isLoading: false,\r\n    message: ''\r\n};\r\n\r\n// Get user goals\r\nexport const getGoals = createAsyncThunk('goals/getUserGoals',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            // Como son rutas protegidas, entonces agregar token\r\n            const token = thunkAPI.getState().auth.user.token\r\n            return await goalService.getGoals(token)\r\n        } catch (error) {\r\n            const message =\r\n                (error.message &&\r\n                    error.response.data &&\r\n                    error.response.data.message)\r\n                || error.message || error.toString()\r\n            return thunkAPI.rejectWithValue(message)\r\n        }\r\n    });\r\n\r\n// Create goal\r\nexport const createGoal = createAsyncThunk('goals/create',\r\n    async (goalData, thunkAPI) => {\r\n        try {\r\n            const token = thunkAPI.getState().auth.user.token\r\n            console.log(token);\r\n            return await goalService.createGoal(goalData, token)\r\n        } catch (error) {\r\n            const message =\r\n                (error.message &&\r\n                    error.response.data &&\r\n                    error.response.data.message)\r\n                || error.message || error.toString()\r\n            return thunkAPI.rejectWithValue(message)\r\n        }\r\n    });\r\n\r\n// Delete goal\r\nexport const deleteGoal = createAsyncThunk('goals/delete',\r\n    async (id, thunkAPI) => {\r\n        try {\r\n            const token = thunkAPI.getState().auth.user.token\r\n            return await goalService.deleteGoal(id, token)\r\n        } catch (error) {\r\n            const message =\r\n                (error.message &&\r\n                    error.response.data &&\r\n                    error.response.data.message)\r\n                || error.message || error.toString()\r\n            return thunkAPI.rejectWithValue(message)\r\n        }\r\n    });\r\n\r\nexport const goalSlice = createSlice({\r\n    name: 'goal',\r\n    initialState,\r\n    reducers: {\r\n        reset: (state) => initialState,\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(createGoal.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(createGoal.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.goals.push(action.payload)\r\n            })\r\n            .addCase(createGoal.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n            .addCase(getGoals.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(getGoals.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.goals = action.payload\r\n            })\r\n            .addCase(getGoals.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n            .addCase(deleteGoal.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(deleteGoal.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.isSuccess = true\r\n                state.goals = state.goals.filter((goal) => goal._id !== action.payload.id)\r\n            })\r\n            .addCase(deleteGoal.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.isError = true\r\n                state.message = action.payload\r\n            })\r\n    }\r\n});\r\n\r\nexport const { reset } = goalSlice.actions;\r\nexport default goalSlice.reducer;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createGoal } from '../Features/Goals/goalSlice';\r\n\r\nexport default function GoalForm() {\r\n    const [text, setText] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(createGoal({ text }));\r\n        setText('');\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='form-group'>\r\n                    <label htmlFor=\"text\">Goal</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id='text'\r\n                        name='text'\r\n                        value={text}\r\n                        onChange={(e) => setText(e.target.value)}\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                    <button className='btn btn-block'>\r\n                        Add Goal\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className='loadingSpinnerContainer'>\r\n            <div className=\"loadingSpinner\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteGoal } from '../Features/Goals/goalSlice';\r\n\r\nexport default function GoalItem({ goal }) {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <div className='goal'>\r\n            <div>\r\n                {new Date(goal.createdAt).toLocaleString('en-US')}\r\n            </div>\r\n            <h2>{goal.text}</h2>\r\n            <button\r\n                className='close'\r\n                onClick={() => dispatch(deleteGoal(goal._id))}\r\n            >\r\n                X\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport GoalForm from '../components/GoalForm';\r\nimport Spinner from '../components/Spinner';\r\nimport { getGoals, reset } from '../Features/Goals/goalSlice';\r\nimport GoalItem from '../components/GoalItem';\r\n\r\nexport default function Dashboard() {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector((state) => state.auth);\r\n    const { goals, isLoading, isError, message } = useSelector((state) => state.goals);\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            console.log(message)\r\n        };\r\n\r\n        if (!user) {\r\n            navigate('/login')\r\n        };\r\n\r\n        dispatch(getGoals());\r\n\r\n        return () => {\r\n            dispatch(reset())\r\n        };\r\n    }, [user, navigate, isError, message, dispatch]);\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <section className='heading'>\r\n                <h1>Welcome {user && user.name}</h1>\r\n                <p>Goals Dashboard</p>\r\n            </section>\r\n            <GoalForm />\r\n            <section className='content'>\r\n                {goals.length > 0 ? (\r\n                    <div>\r\n                        {goals.map((goal) => (\r\n                            <GoalItem key={goal._id} goal={goal} />\r\n                        ))}\r\n                    </div>\r\n                ) : (<h3>You have no goals in life</h3>)}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport { register, reset } from '../Features/Auth/authSlice';\r\nimport Spinner from '../components/Spinner';\r\n\r\nexport default function Register() {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formData;\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, isLoading, isError, isSuccess, message } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            toast.error(\"Error\")\r\n        }\r\n\r\n        if (isSuccess || user) {\r\n            navigate('/')\r\n        }\r\n\r\n        dispatch(reset())\r\n\r\n    }, [isError, isSuccess, user, message, navigate, dispatch])\r\n\r\n    const onChange = (e) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n        }))\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== password2) {\r\n            toast.error('Passwords do not match')\r\n        } else {\r\n            const userData = {\r\n                name,\r\n                email,\r\n                password\r\n            };\r\n\r\n            dispatch(register(userData));\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className='heading'>\r\n                <h1>\r\n                    <FaUser /> Register\r\n                </h1>\r\n                <p>Please create an account</p>\r\n            </section>\r\n            <section className=\"form\">\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className='form-control'\r\n                            id='name'\r\n                            name='name'\r\n                            value={name}\r\n                            placeholder='Enter your name'\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className='form-control'\r\n                            id='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Enter your email'\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className='form-control'\r\n                            id='password'\r\n                            name='password'\r\n                            value={password}\r\n                            placeholder='Enter password'\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className='form-control'\r\n                            id='password2'\r\n                            name='password2'\r\n                            value={password2}\r\n                            placeholder='Confirm password'\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type='submit' className='btn btn-block'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FaSignInAlt } from 'react-icons/fa';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { login, reset } from '../Features/Auth/authSlice';\r\nimport Spinner from '../components/Spinner';\r\n\r\nexport default function Login() {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, isLoading, isError, isSuccess, message } = useSelector((state) => state.auth);\r\n\r\n    useEffect(() => {\r\n        if (isError) {\r\n            toast.error(\"Error\")\r\n        }\r\n\r\n        if (isSuccess || user) {\r\n            navigate('/')\r\n        }\r\n\r\n        dispatch(reset())\r\n\r\n    }, [isError, isSuccess, user, message, navigate, dispatch])\r\n\r\n    const onChange = (e) => {\r\n        setFormData((prevState) => ({\r\n            ...prevState,\r\n            [e.target.name]: e.target.value,\r\n        }))\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const userData = {\r\n            email,\r\n            password\r\n        };\r\n\r\n        dispatch(login(userData));\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className='heading'>\r\n                <h1>\r\n                    <FaSignInAlt /> Login\r\n                </h1>\r\n                <p>Login and start setting goals</p>\r\n            </section>\r\n            <section className=\"form\">\r\n                <form onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className='form-control'\r\n                            id='email'\r\n                            name='email'\r\n                            value={email}\r\n                            placeholder='Enter your email'\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className='form-control'\r\n                            id='password'\r\n                            name='password'\r\n                            value={password}\r\n                            placeholder='Enter password'\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type='submit' className='btn btn-block'>Submit</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Header from './components/Header';\nimport Dashboard from './pages/Dashboard';\nimport Register from './pages/Register';\nimport Login from './pages/Login';\n\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter>\n        <div className=\"container\">\n          <Header />\n          <Routes>\n            <Route path='/' element={<Dashboard />} />\n            <Route path='/register' element={<Register />} />\n            <Route path='/login' element={<Login />} />\n          </Routes>\n          <ToastContainer />\n        </div>\n      </BrowserRouter>\n    </>\n  )\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport authSlice from '../Features/Auth/authSlice';\r\nimport goalSlice from '../Features/Goals/goalSlice';\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: authSlice,\r\n        goals: goalSlice\r\n    },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}